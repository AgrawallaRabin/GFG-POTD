PROBLEM --> First and last occurrences of x
DIFFICULTY --> MEDIUM
DATE --> 22/09/23
T.C --> O(LOGN) S.C --> O(1)

CODE -->
int first(int arr[], int n, int x)
{
    int ans = -1;
    int s = 0, e = n - 1;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;
        if (arr[mid] == x)
        {
            ans = mid;
            e = mid - 1;
        }
        else if (arr[mid] < x)
            s = mid + 1;
        else
            e = mid - 1;
    }
    return ans;
}
int last(int arr[], int n, int x)
{
    int ans = -1;
    int s = 0, e = n - 1;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;
        if (arr[mid] == x)
        {
            ans = mid;
            s = mid + 1;
        }
        else if (arr[mid] < x)
            s = mid + 1;
        else
            e = mid - 1;
    }
    return ans;
}
vector<int> find(int arr[], int n, int x)
{
    // code here
    vector<int> temp;
    int fi = first(arr, n, x);
    int la = last(arr, n, x);
    temp.push_back(fi);
    temp.push_back(la);
    return temp;
}
